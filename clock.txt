#include <SoftwareSerial.h>
//#include <Time.h>
//#include <TimeLib.h>
 int year, month, day, hour, minute, second;
 int gettime = 0;

 
void setup() {
  Serial.begin(115200);
  Serial2.begin(115200);



}

void loop() {

   if(gettime==0){
  // Initialize time
  setTimeFromGSM(); // Get time from GSM module
   }
  Serial.print("Year: ");
  Serial.println(year);
  Serial.print("Month: ");
  Serial.println(month);
  Serial.print("Day: ");
  Serial.println(day);
  Serial.print("Hour: ");
  Serial.println(hour);
  Serial.print("Minute: ");
  Serial.println(minute);
  Serial.print("Second: ");
  Serial.println(second);

}


/*
 while (Serial2.available()) {
    int inByte = Serial2.read();
    Serial.println(inByte);
 }*/

    
void setTimeFromGSM() {

  while (Serial2.available()) {
  Serial2.println("AT+CCLK?");
  delay(1000); // Wait for response
  String response = Serial2.readStringUntil('\n');
  if (response.length() > 4){gettime==1;}
  Serial.println(response);
  sscanf(response.c_str(), "+CCLK: \"%d/%d/%d,%d:%d:%d", &year, &month, &day, &hour, &minute, &second);
   break;
  }
}



#include <SoftwareSerial.h>
#include<String.h>
void setDate();
void setTime();
 int febucheck;
int day,month,year,hour,mint,seconds;
int dy[2],mnth[2],yar[4],hur[2],minu[2];
 int gettime = 0;
int d,m,y,h,mi,s;
  
void setup() {
  Serial.begin(115200);
  Serial2.begin(115200);



}

void loop() {

   if(gettime==0){
  // Initialize time
  setTimeFromGSM(); // Get time from GSM module
   }


 else if (gettime==1){
  Serial.println("SET->1");
  Serial.print(hour);
  Serial.print(":");
  Serial.print(mint);
  delay(990);  
  seconds++; 
  Serial.print(":");
  Serial.print(seconds);
  if(seconds==60)
    {
      seconds=0;
      mint++;    
 
  }
  if(mint==60)
    {
      mint=0;
      hour++;
   
    }
    if((month==1 || month==3 || month==5 || month==7 || month==8 || month==10 )&& day==31 && 
    hour==24)
    {
      day=1;
      seconds=0;
      mint=0;
      hour=0;
      month++;
    
    }
    if(month==12 && day==31 && hour==24)
    {
      month=1;
      day=1;
      seconds=0;
      mint=0;
      hour=0;
      year++;
    
      if(year>2000)
      febucheck=year-2000;
      else if(year<2000)
      febucheck=2000-year;
      else
      febucheck=0;
    }
    if(month==2 && (febucheck%4)==0 && day==29 && hour==24)
    {
      day=1;
      seconds=0;
      mint=0;
      hour=0;
      month++; 
   
    }
    else if(month==2 && (febucheck%4)!=0 && day==28 && hour==24)
    {
      day=1;
      seconds=0;
      mint=0;
      hour=0;
      month++;
    
    }
    else{}
    if(hour==24)
    {
      hour=0;
      day++;
    
    }
  Serial.print(" Date:");
  Serial.print(day);
  Serial.print("/");
  Serial.print(month);
  Serial.print("/");
  Serial.print(year);

 /*// int gettime=getKey1();
  if(gettime==0)
          {
    
              delay(500);
              setDate();
              setTime();
    
          }*/
  }
}


/*
 while (Serial2.available()) {
    int inByte = Serial2.read();
    Serial.println(inByte);
 }*/
void printDigits(int digits) {
  Serial.print(":");
  if (digits < 10)
    Serial.print('0');
  Serial.print(digits);
}
    
void setTimeFromGSM() {
  while (Serial2.available()) {
    Serial2.println("AT+CCLK?");
    delay(1000); // Wait for response
    String response = Serial2.readStringUntil('\n');
    Serial.println("Received response: " + response);

    // Check if the response starts with "+CCLK:" and has the minimum required length
    if (response.startsWith("+CCLK:") && response.length() > 18) {
      // Extract date and time components manually
      String dateStr = response.substring(8, 20);
      String timeStr = response.substring(17, 22);

      // Parse date components
      day = dateStr.substring(0, 2).toInt();
      month = dateStr.substring(3, 5).toInt();
      year = dateStr.substring(6, 8).toInt();

      // Parse time components
      hour = timeStr.substring(0, 2).toInt();
      mint = timeStr.substring(3, 5).toInt();
      seconds = timeStr.substring(6, 8).toInt();

      // Print parsed values for debugging
      Serial.print("Parsed date: ");
      Serial.print(day);
      Serial.print("/");
      Serial.print(month);
      Serial.print("/");
      Serial.println(year);
      Serial.print("Parsed time: ");
      Serial.print(hour);
      Serial.print(":");
      Serial.print(mint);
      Serial.print(":");
      Serial.println(seconds);

      // Exit the loop after successfully setting the time
      gettime = 1;
      Serial.println("Time set successfully.");
      break;
    } else {
      Serial.println("Invalid response format.");
    }
  }
}




